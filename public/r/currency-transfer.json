{
  "name": "currency-transfer",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\"\nimport { useState } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { ArrowRight, RefreshCw, Copy, Check } from \"lucide-react\"\n\ninterface CheckmarkProps {\n  size?: number\n  strokeWidth?: number\n  color?: string\n  className?: string\n}\n\nconst draw = {\n  hidden: { pathLength: 0, opacity: 0 },\n  visible: (i: number) => ({\n    pathLength: 1,\n    opacity: 1,\n    transition: {\n      pathLength: {\n        delay: i * 0.2,\n        type: \"spring\",\n        duration: 1.5,\n        bounce: 0.2,\n        ease: \"easeInOut\",\n      },\n      opacity: { delay: i * 0.2, duration: 0.2 },\n    },\n  }),\n}\n\nexport function Checkmark({ size = 100, strokeWidth = 2, color = \"currentColor\", className = \"\" }: CheckmarkProps) {\n  return (\n    <motion.svg\n      width={size}\n      height={size}\n      viewBox=\"0 0 100 100\"\n      initial=\"hidden\"\n      animate=\"visible\"\n      className={className}\n    >\n      <title>Animated Checkmark</title>\n      <motion.circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"40\"\n        stroke={color}\n        variants={draw}\n        custom={0}\n        style={{\n          strokeWidth,\n          strokeLinecap: \"round\",\n          fill: \"transparent\",\n        }}\n      />\n      <motion.path\n        d=\"M30 50L45 65L70 35\"\n        stroke={color}\n        variants={draw}\n        custom={1}\n        style={{\n          strokeWidth,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          fill: \"transparent\",\n        }}\n      />\n    </motion.svg>\n  )\n}\n\nexport default function CurrencyTransfer() {\n  const [copied, setCopied] = useState(false)\n  const [isHovering, setIsHovering] = useState(false)\n  const [showDetails, setShowDetails] = useState(false)\n  const [isResetting, setIsResetting] = useState(false)\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(\"Transaction ID: TRX-28974651\")\n    setCopied(true)\n    setTimeout(() => setCopied(false), 2000)\n  }\n\n  const handleReset = () => {\n    setIsResetting(true)\n    setTimeout(() => {\n      setIsResetting(false)\n      setShowDetails(false)\n    }, 1000)\n  }\n\n  return (\n    <Card\n      className=\"w-full max-w-sm mx-auto p-6 min-h-[300px] flex flex-col justify-center bg-zinc-50 dark:bg-zinc-950 border border-zinc-200 dark:border-zinc-800 backdrop-blur-xs relative overflow-hidden\"\n    >\n      {/* Background pulse effect */}\n      <motion.div\n        className=\"absolute inset-0 bg-emerald-500/5 rounded-xl\"\n        animate={{\n          scale: [1, 1.05, 1],\n          opacity: [0.5, 0.8, 0.5],\n        }}\n        transition={{\n          duration: 4,\n          repeat: Number.POSITIVE_INFINITY,\n          ease: \"easeInOut\",\n        }}\n      />\n\n      <CardContent className=\"space-y-4 flex flex-col items-center justify-center relative z-10\">\n        <AnimatePresence mode=\"wait\">\n          {!isResetting ? (\n            <motion.div\n              className=\"flex justify-center\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.8 }}\n              transition={{\n                duration: 0.4,\n                ease: [0.4, 0, 0.2, 1],\n                scale: {\n                  type: \"spring\",\n                  damping: 15,\n                  stiffness: 200,\n                },\n              }}\n            >\n              <div className=\"relative\">\n                <motion.div\n                  className=\"absolute inset-0 blur-xl bg-emerald-500/10 dark:bg-emerald-500/20 rounded-full\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{\n                    delay: 0.2,\n                    duration: 0.8,\n                    ease: \"easeOut\",\n                  }}\n                  whileHover={{\n                    scale: 1.2,\n                    opacity: 0.8,\n                    transition: { duration: 0.3 },\n                  }}\n                />\n                <Checkmark\n                  size={80}\n                  strokeWidth={4}\n                  color=\"rgb(16 185 129)\"\n                  className=\"relative z-10 dark:drop-shadow-[0_0_10px_rgba(0,0,0,0.1)]\"\n                />\n              </div>\n            </motion.div>\n          ) : (\n            <motion.div\n              className=\"flex justify-center\"\n              initial={{ opacity: 0, rotate: 0 }}\n              animate={{ opacity: 1, rotate: 360 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.8 }}\n            >\n              <RefreshCw size={80} className=\"text-emerald-500\" />\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <motion.div\n          className=\"space-y-2 text-center w-full\"\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{\n            delay: 0.2,\n            duration: 0.6,\n            ease: [0.4, 0, 0.2, 1],\n          }}\n        >\n          <motion.h2\n            className=\"text-lg text-zinc-900 dark:text-zinc-100 tracking-tighter font-semibold uppercase\"\n            initial={{ opacity: 0, y: 5 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 1, duration: 0.4 }}\n            whileHover={{\n              scale: 1.05,\n              transition: { duration: 0.2 },\n            }}\n          >\n            Transfer Successful\n          </motion.h2>\n\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              className=\"flex items-center gap-4\"\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{\n                delay: 1.2,\n                duration: 0.4,\n                ease: [0.4, 0, 0.2, 1],\n              }}\n            >\n              <motion.div\n                className=\"flex-1 bg-zinc-100/50 dark:bg-zinc-800/50 rounded-xl p-3 border border-zinc-200/50 dark:border-zinc-700/50 backdrop-blur-md\"\n                whileHover={{\n                  scale: 1.02,\n                  boxShadow: \"0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1)\",\n                  transition: { duration: 0.2 },\n                }}\n                onHoverStart={() => setIsHovering(true)}\n                onHoverEnd={() => setIsHovering(false)}\n              >\n                <div className=\"flex flex-col items-start gap-2\">\n                  <div className=\"space-y-1.5\">\n                    <span className=\"text-xs font-medium text-zinc-700 dark:text-zinc-300 flex items-center gap-1.5\">\n                      <motion.svg\n                        className=\"w-3 h-3\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        animate={isHovering ? { y: [-1, 1, -1] } : {}}\n                        transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY }}\n                      >\n                        <title>From</title>\n                        <path d=\"M12 19V5M5 12l7-7 7 7\" />\n                      </motion.svg>\n                      From\n                    </span>\n                    <div className=\"flex items-center gap-2.5 group transition-all\">\n                      <motion.span\n                        className=\"inline-flex items-center justify-center w-7 h-7 rounded-lg bg-zinc-200 dark:bg-zinc-700 shadow-lg border border-zinc-300 dark:border-zinc-600 text-sm font-medium text-zinc-900 dark:text-zinc-100\"\n                        whileHover={{\n                          scale: 1.15,\n                          rotate: [0, -5, 5, 0],\n                          transition: { duration: 0.5 },\n                        }}\n                      >\n                        $\n                      </motion.span>\n                      <motion.span\n                        className=\"font-medium text-zinc-900 dark:text-zinc-100 tracking-tight\"\n                        whileHover={{\n                          color: \"#10b981\",\n                          transition: { duration: 0.2 },\n                        }}\n                      >\n                        500.00 USD\n                      </motion.span>\n                    </div>\n                  </div>\n                  <motion.div\n                    className=\"w-full h-px bg-gradient-to-r from-transparent via-zinc-300 dark:via-zinc-700 to-transparent\"\n                    animate={\n                      isHovering\n                        ? {\n                            scaleX: [1, 1.1, 1],\n                            opacity: [0.5, 1, 0.5],\n                          }\n                        : {}\n                    }\n                    transition={{ duration: 1.5, repeat: Number.POSITIVE_INFINITY }}\n                  />\n                  <div className=\"space-y-1.5\">\n                    <span className=\"text-xs font-medium text-zinc-700 dark:text-zinc-300 flex items-center gap-1.5\">\n                      <motion.svg\n                        className=\"w-3 h-3\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        animate={isHovering ? { y: [1, -1, 1] } : {}}\n                        transition={{ duration: 1, repeat: Number.POSITIVE_INFINITY }}\n                      >\n                        <title>To</title>\n                        <path d=\"M12 5v14M5 12l7 7 7-7\" />\n                      </motion.svg>\n                      To\n                    </span>\n                    <div className=\"flex items-center gap-2.5 group transition-all\">\n                      <motion.span\n                        className=\"inline-flex items-center justify-center w-7 h-7 rounded-lg bg-zinc-200 dark:bg-zinc-700 shadow-lg border border-zinc-300 dark:border-zinc-600 text-sm font-medium text-zinc-900 dark:text-zinc-100\"\n                        whileHover={{\n                          scale: 1.15,\n                          rotate: [0, 5, -5, 0],\n                          transition: { duration: 0.5 },\n                        }}\n                      >\n                        €\n                      </motion.span>\n                      <motion.span\n                        className=\"font-medium text-zinc-900 dark:text-zinc-100 tracking-tight\"\n                        whileHover={{\n                          color: \"#10b981\",\n                          transition: { duration: 0.2 },\n                        }}\n                      >\n                        460.00 EUR\n                      </motion.span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            </motion.div>\n          </AnimatePresence>\n\n          <motion.div\n            className=\"w-full text-xs text-zinc-500 dark:text-zinc-400 mt-2 text-center\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 1.4, duration: 0.4 }}\n            whileHover={{\n              scale: 1.05,\n              color: \"rgb(16 185 129)\",\n              transition: { duration: 0.2 },\n            }}\n          >\n            Exchange Rate: 1 USD = 0.92 EUR\n          </motion.div>\n\n          <AnimatePresence>\n            {showDetails && (\n              <motion.div\n                className=\"mt-4 p-3 bg-zinc-100/50 dark:bg-zinc-800/50 rounded-xl border border-zinc-200/50 dark:border-zinc-700/50\"\n                initial={{ opacity: 0, height: 0, y: -20 }}\n                animate={{ opacity: 1, height: \"auto\", y: 0 }}\n                exit={{ opacity: 0, height: 0, y: -20 }}\n                transition={{ duration: 0.3 }}\n              >\n                <div className=\"text-xs text-zinc-700 dark:text-zinc-300 space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span>Date:</span>\n                    <span className=\"text-zinc-900 dark:text-zinc-100\">April 24, 2025</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Fee:</span>\n                    <span className=\"text-zinc-900 dark:text-zinc-100\">2.50 USD</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>Transaction ID:</span>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-zinc-900 dark:text-zinc-100\">TRX-28974651</span>\n                      <motion.button\n                        onClick={handleCopy}\n                        whileHover={{ scale: 1.1 }}\n                        whileTap={{ scale: 0.9 }}\n                        className=\"text-zinc-500 dark:text-zinc-400 hover:text-emerald-500\"\n                      >\n                        {copied ? <Check size={14} /> : <Copy size={14} />}\n                      </motion.button>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <div className=\"pt-4 flex justify-center gap-3\">\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"bg-transparent border border-zinc-300 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 hover:bg-zinc-200 dark:hover:bg-zinc-800\"\n                onClick={handleReset}\n              >\n                <RefreshCw size={14} className=\"mr-2\" />\n                New Transfer\n              </Button>\n            </motion.div>\n            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"bg-transparent border border-zinc-300 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 hover:bg-zinc-200 dark:hover:bg-zinc-800\"\n                onClick={() => setShowDetails(!showDetails)}\n              >\n                {showDetails ? \"Hide Details\" : \"View Details\"}\n                <motion.div animate={{ rotate: showDetails ? 90 : 0 }} transition={{ duration: 0.2 }} className=\"ml-2\">\n                  <ArrowRight size={14} />\n                </motion.div>\n              </Button>\n            </motion.div>\n          </div>\n        </motion.div>\n      </CardContent>\n    </Card>\n  )\n}",
      "path": "/components/easeui/currency-transfer.tsx",
      "target": "/components/easeui/currency-transfer.tsx"
    }
  ]
}