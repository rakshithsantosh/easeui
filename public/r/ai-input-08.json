{
  "name": "ai-input-08",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { ArrowRight, Mic, Sparkles } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { useAutoResizeTextarea } from \"@/hooks/use-auto-resize-textarea\";\r\n\r\nexport function AIInputVariation8() {\r\n  const { textareaRef, adjustHeight } = useAutoResizeTextarea({\r\n    minHeight: 52,\r\n    maxHeight: 200,\r\n  });\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleReset = () => {\r\n    setInputValue(\"\");\r\n    adjustHeight(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full py-4\">\r\n      <div className=\"relative max-w-xl w-full mx-auto\">\r\n        <div className=\"absolute inset-0 rounded-2xl bg-gradient-to-r from-pink-500/10 via-purple-500/10 to-indigo-500/10 p-0.5\">\r\n          <div className=\"absolute inset-0 rounded-[14px] bg-white dark:bg-gray-950\" />\r\n        </div>\r\n        <div className=\"absolute left-4 top-1/2 -translate-y-1/2 text-purple-500 dark:text-purple-400 z-10\">\r\n          <Sparkles className=\"w-4 h-4\" />\r\n        </div>\r\n        <Textarea\r\n          placeholder=\"Ask me anything...\"\r\n          className={cn(\r\n            \"max-w-xl bg-transparent rounded-2xl pl-12 pr-14\",\r\n            \"placeholder:text-gray-400 dark:placeholder:text-gray-500\",\r\n            \"border-none\",\r\n            \"text-black dark:text-white text-wrap\",\r\n            \"overflow-y-auto resize-none\",\r\n            \"focus-visible:ring-0 focus-visible:ring-offset-0\",\r\n            \"transition-all duration-200 ease-out\",\r\n            \"leading-[1.2] py-[14px]\",\r\n            \"min-h-[52px]\",\r\n            \"max-h-[200px]\",\r\n            \"relative z-10\"\r\n          )}\r\n          ref={textareaRef}\r\n          value={inputValue}\r\n          onChange={(e) => {\r\n            setInputValue(e.target.value);\r\n            adjustHeight();\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleReset();\r\n            }\r\n          }}\r\n        />\r\n\r\n        <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex gap-2 z-10\">\r\n          {!inputValue && (\r\n            <button className=\"p-1.5 rounded-full text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 transition-colors\">\r\n              <Mic className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={handleReset}\r\n            type=\"button\"\r\n            className={cn(\r\n              \"p-1.5 rounded-full bg-gradient-to-r from-pink-500 via-purple-500 to-indigo-500 text-white transition-all\",\r\n              inputValue ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\r\n            )}\r\n          >\r\n            <ArrowRight className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",
      "path": "/components/easeui/ai-input/ai-input-08.tsx",
      "target": "/components/easeui/ai-input-08.tsx"
    }
  ]
}